buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        dependencies {
            classpath "me.champeau.gradle:jmh-gradle-plugin:0.3.1"
        }
    }
}

apply plugin: "me.champeau.gradle.jmh"

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.ow2.asm:asm:5.2"
    compile "org.ow2.asm:asm-util:5.2" // TraceClassVisitor (for debugging)
    compile group: 'org.ow2.asm', name: 'asm-commons', version: '5.0.3' // AdviceAdapter
    compile project(':protobuf')
    compile project(':configuration')
    compile fileTree(dir: '../lib', include: ['annotations-java8.jar'])
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes "Premain-Class": "com.github.kornilova_l.flamegraph.javaagent.agent.Agent"
    }
    archiveName = 'javaagent.jar'
    includeEmptyDirs = false
}

jmh {
    warmupIterations = 5
    iterations = 10
    fork = 2
    include = "test.*"
}

task runAgent(type: JavaExec, dependsOn: build) {
    classpath = sourceSets.main.runtimeClasspath
    main = "temp.Test"
    jvmArgs += ["-javaagent:${jar.getArchivePath()}=/home/lk/java-profiling-plugin/build/idea-sandbox/system&/home/lk/java-profiling-plugin/build/idea-sandbox/system/flamegraph-profiler/configuration/my-configuration.configuration"]
}
