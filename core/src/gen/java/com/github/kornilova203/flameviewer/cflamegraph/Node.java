// automatically generated by the FlatBuffers compiler, do not modify

package com.github.kornilova203.flameviewer.cflamegraph;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Node extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Node __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int classNameId() { return bb.getInt(bb_pos + 0); }
  public int methodNameId() { return bb.getInt(bb_pos + 4); }
  public int descriptionId() { return bb.getInt(bb_pos + 8); }
  public int width() { return bb.getInt(bb_pos + 12); }
  public int depth() { return bb.getInt(bb_pos + 16); }

  public static int createNode(FlatBufferBuilder builder, int classNameId, int methodNameId, int descriptionId, int width, int depth) {
    builder.prep(4, 20);
    builder.putInt(depth);
    builder.putInt(width);
    builder.putInt(descriptionId);
    builder.putInt(methodNameId);
    builder.putInt(classNameId);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Node get(int j) { return get(new Node(), j); }
    public Node get(Node obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

