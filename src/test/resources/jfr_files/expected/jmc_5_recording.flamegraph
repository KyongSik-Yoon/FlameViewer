void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection);int gnu.trove.set.hash.TIntHashSet$TIntHashIterator.next();void gnu.trove.impl.hash.THashPrimitiveIterator.moveToNextIndex();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 91
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet$default(Set, int, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet(Set, int);Set kotlin.collections.CollectionsKt___CollectionsKt.toSet(Iterable);Collection kotlin.collections.CollectionsKt___CollectionsKt.toCollection(Iterable, Collection);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION) 7
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);Object kotlin.collections.LongIterator.next();Long kotlin.collections.LongIterator.next();Long java.lang.Long.valueOf(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);Object java.util.HashMap.get(Object);int java.util.HashMap.hash(Object);int java.lang.Enum.hashCode() 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection);boolean gnu.trove.impl.hash.THashPrimitiveIterator.hasNext();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 18
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(Object, Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.<init>(Tile, Tile, Tile, Tile, Tile);void kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(Object, String) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int) 27
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.impl.hash.TIntHash.contains(int);int gnu.trove.impl.hash.TIntHash.index(int);int gnu.trove.impl.hash.TIntHash.indexRehashed(int, int, int, byte) 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);void org.apache.lucene.util.OpenBitSet.set(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);Iterator java.util.ArrayList.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);void org.apache.lucene.search.DocIdSet.<clinit>();Class java.lang.ClassLoader.loadClass(String);Class sun.misc.Launcher$AppClassLoader.loadClass(String, boolean);Class java.lang.ClassLoader.loadClass(String, boolean);Class java.net.URLClassLoader.findClass(String);Object java.security.AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext);Object java.net.URLClassLoader$1.run();Class java.net.URLClassLoader$1.run();Resource sun.misc.URLClassPath.getResource(String, boolean);Resource sun.misc.URLClassPath$JarLoader.getResource(String, boolean);JarEntry java.util.jar.JarFile.getJarEntry(String);ZipEntry java.util.jar.JarFile.getEntry(String);ZipEntry java.util.zip.ZipFile.getEntry(String);byte[] java.util.zip.ZipCoder.getBytes(String);ByteBuffer java.nio.ByteBuffer.wrap(byte[]);ByteBuffer java.nio.ByteBuffer.wrap(byte[], int, int);void java.nio.HeapByteBuffer.<init>(byte[], int, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);TIntList gnu.trove.list.array.TIntArrayList.subList(int, int);void gnu.trove.list.array.TIntArrayList.<init>(int);void gnu.trove.list.array.TIntArrayList.<init>(int, int) 13
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.impl.hash.TIntHash.contains(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);boolean org.apache.lucene.util.OpenBitSet.get(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List) 176
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.isIncluded(POSITION);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 37
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(Set);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean) 8
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);Pattern java.util.Scanner.integerPattern();Object sun.misc.LRUCache.forName(Object);Object java.util.Scanner$1.create(Object);Pattern java.util.Scanner$1.create(String);Pattern java.util.regex.Pattern.compile(String);void java.util.regex.Pattern.<init>(String, int);void java.util.regex.Pattern.compile();Pattern$Node java.util.regex.Pattern.expr(Pattern$Node);Pattern$Node java.util.regex.Pattern.sequence(Pattern$Node);Pattern$Node java.util.regex.Pattern.group0();Pattern$Node java.util.regex.Pattern.expr(Pattern$Node);Pattern$Node java.util.regex.Pattern.sequence(Pattern$Node);Pattern$Node java.util.regex.Pattern.group0();Pattern$Node java.util.regex.Pattern.expr(Pattern$Node);Pattern$Node java.util.regex.Pattern.sequence(Pattern$Node);Pattern$Node java.util.regex.Pattern.group0();Pattern$Node java.util.regex.Pattern.expr(Pattern$Node);Pattern$Node java.util.regex.Pattern.sequence(Pattern$Node);Pattern$Node java.util.regex.Pattern.group0();Pattern$Node java.util.regex.Pattern.expr(Pattern$Node);Pattern$Node java.util.regex.Pattern.sequence(Pattern$Node);Pattern$Node java.util.regex.Pattern.group0();void java.util.regex.Pattern.addFlag() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 153
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int);int java.util.Arrays.binarySearch0(int[], int, int, int) 15
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object);HashMap$TreeNode java.util.HashMap$TreeNode.getTreeNode(int, Object);HashMap$TreeNode java.util.HashMap$TreeNode.root() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);TLongArrayList com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.parseLongs(File);boolean java.util.Scanner.hasNextLong();boolean java.util.Scanner.hasNextLong(int);boolean java.util.Scanner.hasNext(Pattern);String java.util.Scanner.getCompleteTokenInBuffer(Pattern);boolean java.util.regex.Matcher.find();boolean java.util.regex.Matcher.search(int);boolean java.util.regex.Pattern$Start.match(Matcher, int, CharSequence);boolean java.util.regex.Pattern$Curly.match(Matcher, int, CharSequence);boolean java.util.regex.Pattern$Curly.match0(Matcher, int, int, CharSequence);boolean java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);boolean java.util.ArrayList.add(Object);void java.util.ArrayList.ensureCapacityInternal(int);void java.util.ArrayList.ensureExplicitCapacity(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.set.hash.TIntHashSet.add(int);int gnu.trove.impl.hash.TIntHash.insertKey(int);int gnu.trove.impl.hash.TIntHash.insertKeyRehash(int, int, int, byte) 5
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.impl.hash.TIntHash.contains(int);int gnu.trove.impl.hash.TIntHash.index(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.io.BufferedReader.read() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);void jnisat.JPicoSat.addClause(int[]) 27
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection) 40
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(Set) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection);TIntIterator gnu.trove.set.hash.TIntHashSet.iterator();void gnu.trove.set.hash.TIntHashSet$TIntHashIterator.<init>(TIntHashSet, TIntHash) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object);HashMap$TreeNode java.util.HashMap$TreeNode.getTreeNode(int, Object);HashMap$TreeNode java.util.HashMap$TreeNode.find(int, Object, Class);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.io.BufferedReader.read();void java.io.BufferedReader.fill();int java.io.InputStreamReader.read(char[], int, int);int sun.nio.cs.StreamDecoder.read(char[], int, int);int sun.nio.cs.StreamDecoder.implRead(char[], int, int);CoderResult java.nio.charset.CharsetDecoder.decode(ByteBuffer, CharBuffer, boolean);CoderResult sun.nio.cs.UTF_8$Decoder.decodeLoop(ByteBuffer, CharBuffer);CoderResult sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer) 1
