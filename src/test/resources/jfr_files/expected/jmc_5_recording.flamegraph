void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);void kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION) 7
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);gnu.trove.list.array.TLongArrayList com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.parseLongs(java.io.File);boolean java.util.Scanner.hasNextLong();boolean java.util.Scanner.hasNextLong(int);boolean java.util.Scanner.hasNext(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.find();boolean java.util.regex.Matcher.search(int);boolean java.util.regex.Pattern$Start.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match0(java.util.regex.Matcher, int, int, java.lang.CharSequence);boolean java.util.regex.Pattern$CharProperty.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 153
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.List, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.List);void jnisat.JPicoSat.addClause(int[]) 27
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.List, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.List);gnu.trove.list.TIntList gnu.trove.list.array.TIntArrayList.subList(int, int);void gnu.trove.list.array.TIntArrayList.<init>(int);void gnu.trove.list.array.TIntArrayList.<init>(int, int) 13
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.impl.hash.TIntHash.contains(int);int gnu.trove.impl.hash.TIntHash.index(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int) 27
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.list.array.TIntArrayList.addAll(gnu.trove.TIntCollection) 40
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);boolean org.apache.lucene.util.OpenBitSet.get(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List) 176
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.impl.hash.TIntHash.contains(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);void org.apache.lucene.util.OpenBitSet.set(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.impl.hash.TIntHash.contains(int);int gnu.trove.impl.hash.TIntHash.index(int);int gnu.trove.impl.hash.TIntHash.indexRehashed(int, int, int, byte) 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);boolean java.util.ArrayList.add(java.lang.Object);void java.util.ArrayList.ensureCapacityInternal(int);void java.util.ArrayList.ensureExplicitCapacity(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);java.lang.Object kotlin.collections.LongIterator.next();java.lang.Long kotlin.collections.LongIterator.next();java.lang.Long java.lang.Long.valueOf(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.io.BufferedReader.read() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.set.hash.TIntHashSet.add(int);int gnu.trove.impl.hash.TIntHash.insertKey(int);int gnu.trove.impl.hash.TIntHash.insertKeyRehash(int, int, int, byte) 5
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.list.array.TIntArrayList.addAll(gnu.trove.TIntCollection);int gnu.trove.set.hash.TIntHashSet$TIntHashIterator.next();void gnu.trove.impl.hash.THashPrimitiveIterator.moveToNextIndex();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 91
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(java.util.Set);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) 8
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.list.array.TIntArrayList.addAll(gnu.trove.TIntCollection);gnu.trove.iterator.TIntIterator gnu.trove.set.hash.TIntHashSet.iterator();void gnu.trove.set.hash.TIntHashSet$TIntHashIterator.<init>(gnu.trove.set.hash.TIntHashSet, gnu.trove.impl.hash.TIntHash) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet$default(java.util.Set, int, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet(java.util.Set, int);java.util.Set kotlin.collections.CollectionsKt___CollectionsKt.toSet(java.lang.Iterable);java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.toCollection(java.lang.Iterable, java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.isIncluded(com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 37
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);java.lang.Object java.util.HashMap.get(java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int java.lang.Enum.hashCode() 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.util.regex.Pattern java.util.Scanner.integerPattern();java.lang.Object sun.misc.LRUCache.forName(java.lang.Object);java.lang.Object java.util.Scanner$1.create(java.lang.Object);java.util.regex.Pattern java.util.Scanner$1.create(java.lang.String);java.util.regex.Pattern java.util.regex.Pattern.compile(java.lang.String);void java.util.regex.Pattern.<init>(java.lang.String, int);void java.util.regex.Pattern.compile();java.util.regex.Pattern$Node java.util.regex.Pattern.expr(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.sequence(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.group0();java.util.regex.Pattern$Node java.util.regex.Pattern.expr(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.sequence(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.group0();java.util.regex.Pattern$Node java.util.regex.Pattern.expr(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.sequence(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.group0();java.util.regex.Pattern$Node java.util.regex.Pattern.expr(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.sequence(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.group0();java.util.regex.Pattern$Node java.util.regex.Pattern.expr(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.sequence(java.util.regex.Pattern$Node);java.util.regex.Pattern$Node java.util.regex.Pattern.group0();void java.util.regex.Pattern.addFlag() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.getTreeNode(int, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(java.util.Set) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int);int java.util.Arrays.binarySearch0(int[], int, int, int) 15
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);void org.apache.lucene.search.DocIdSet.<clinit>();java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String);java.lang.Class sun.misc.Launcher$AppClassLoader.loadClass(java.lang.String, boolean);java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String, boolean);java.lang.Class java.net.URLClassLoader.findClass(java.lang.String);java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext);java.lang.Object java.net.URLClassLoader$1.run();java.lang.Class java.net.URLClassLoader$1.run();sun.misc.Resource sun.misc.URLClassPath.getResource(java.lang.String, boolean);sun.misc.Resource sun.misc.URLClassPath$JarLoader.getResource(java.lang.String, boolean);java.util.jar.JarEntry java.util.jar.JarFile.getJarEntry(java.lang.String);java.util.zip.ZipEntry java.util.jar.JarFile.getEntry(java.lang.String);java.util.zip.ZipEntry java.util.zip.ZipFile.getEntry(java.lang.String);byte[] java.util.zip.ZipCoder.getBytes(java.lang.String);java.nio.ByteBuffer java.nio.ByteBuffer.wrap(byte[]);java.nio.ByteBuffer java.nio.ByteBuffer.wrap(byte[], int, int);void java.nio.HeapByteBuffer.<init>(byte[], int, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.list.array.TIntArrayList.addAll(gnu.trove.TIntCollection);boolean gnu.trove.impl.hash.THashPrimitiveIterator.hasNext();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 18
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(java.lang.Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);java.util.Iterator java.util.ArrayList.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.getTreeNode(int, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.root() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.io.BufferedReader.read();void java.io.BufferedReader.fill();int java.io.InputStreamReader.read(char[], int, int);int sun.nio.cs.StreamDecoder.read(char[], int, int);int sun.nio.cs.StreamDecoder.implRead(char[], int, int);java.nio.charset.CoderResult java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean);java.nio.charset.CoderResult sun.nio.cs.UTF_8$Decoder.decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer);java.nio.charset.CoderResult sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1
