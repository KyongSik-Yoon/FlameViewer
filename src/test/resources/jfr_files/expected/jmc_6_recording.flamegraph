void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection);int gnu.trove.set.hash.TIntHashSet$TIntHashIterator.next();void gnu.trove.impl.hash.THashPrimitiveIterator.moveToNextIndex();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 64
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION) 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);Object kotlin.collections.LongIterator.next();Long kotlin.collections.LongIterator.next();Long java.lang.Long.valueOf(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.isSolvable(long, TLongArrayList) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);TLongArrayList com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.parseLongs(File);void java.util.Scanner.<init>(File);void java.util.Scanner.<init>(ReadableByteChannel);void java.util.Scanner.<init>(Readable, Pattern);Scanner java.util.Scanner.useLocale(Locale);NumberFormat java.text.NumberFormat.getNumberInstance(Locale);NumberFormat java.text.NumberFormat.getInstance(Locale, int);NumberFormat java.text.NumberFormat.getInstance(LocaleProviderAdapter, Locale, int);NumberFormat sun.util.locale.provider.NumberFormatProviderImpl.getNumberInstance(Locale);NumberFormat sun.util.locale.provider.NumberFormatProviderImpl.getInstance(Locale, int);DecimalFormatSymbols java.text.DecimalFormatSymbols.getInstance(Locale);LocaleProviderAdapter sun.util.locale.provider.LocaleProviderAdapter.getAdapter(Class, Locale);LocaleProviderAdapter sun.util.locale.provider.LocaleProviderAdapter.findAdapter(Class, Locale);LocaleServiceProvider sun.util.locale.provider.JRELocaleProviderAdapter.getLocaleServiceProvider(Class);DecimalFormatSymbolsProvider sun.util.locale.provider.JRELocaleProviderAdapter.getDecimalFormatSymbolsProvider();MethodHandle java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant(Class, int, Class, String, Object);MethodHandle java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant(byte, Class, String, Object);MethodHandle java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant(byte, Class, MemberName);MethodHandle java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager(byte, Class, MemberName, Class);MethodHandle java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon(byte, Class, MemberName, boolean, boolean, Class);DirectMethodHandle java.lang.invoke.DirectMethodHandle.make(byte, Class, MemberName);LambdaForm java.lang.invoke.DirectMethodHandle.preparedLambdaForm(MemberName);LambdaForm java.lang.invoke.DirectMethodHandle.preparedLambdaForm(MethodType, int);LambdaForm java.lang.invoke.MethodTypeForm.cachedLambdaForm(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);int java.util.HashMap.hash(Object);int com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.hashCode();int org.apache.lucene.util.OpenBitSet.hashCode() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection);boolean gnu.trove.impl.hash.THashPrimitiveIterator.hasNext();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 16
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(Object, Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);Iterator kotlin.ranges.LongProgression.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int) 14
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.impl.hash.TIntHash.contains(int);int gnu.trove.impl.hash.TIntHash.index(int);int gnu.trove.impl.hash.TIntHash.indexRehashed(int, int, int, byte) 78
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);TIntList gnu.trove.list.array.TIntArrayList.subList(int, int);void gnu.trove.list.array.TIntArrayList.<init>(int);void gnu.trove.list.array.TIntArrayList.<init>(int, int) 25
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.impl.hash.TIntHash.contains(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.io.BufferedReader.read();void java.io.BufferedReader.ensureOpen() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List) 79
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(Object, Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.isIncluded(POSITION);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 34
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);Pattern java.util.Scanner.integerPattern();Pattern java.util.Scanner$PatternLRUCache.forName(String);Pattern java.util.regex.Pattern.compile(String);void java.util.regex.Pattern.<init>(String, int);void java.util.regex.Pattern.compile();void java.util.regex.Pattern.RemoveQEQuoting() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);Object java.util.HashMap$KeyIterator.next();HashMap$Node java.util.HashMap$HashIterator.nextNode() 117
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(Set);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);void jnisat.JPicoSat.<clinit>();void jnisat.LibDetect.loadLibrary(String);InputStream java.lang.Class.getResourceAsStream(String);InputStream java.lang.ClassLoader.getResourceAsStream(String);URL java.lang.ClassLoader.getResource(String);URL java.lang.ClassLoader.getResource(String);URL jdk.internal.loader.BuiltinClassLoader.findResource(String);List jdk.internal.loader.BuiltinClassLoader.findMiscResource(String);Object java.security.AccessController.doPrivileged(PrivilegedExceptionAction);Object jdk.internal.loader.BuiltinClassLoader$2.run();List jdk.internal.loader.BuiltinClassLoader$2.run();Optional jdk.internal.module.SystemModuleFinder$ImageModuleReader.find(String);ImageLocation jdk.internal.module.SystemModuleFinder$ImageModuleReader.findImageLocation(String);ImageLocation jdk.internal.jimage.ImageReader.findLocation(String, String);ImageLocation jdk.internal.jimage.BasicImageReader.findLocation(String, String);int jdk.internal.jimage.ImageStringsReader.hashCode(String, String);int jdk.internal.jimage.ImageStringsReader.hashCode(String, String, int);int jdk.internal.jimage.ImageStringsReader.unmaskedHashCode(String, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 59
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);void org.apache.lucene.util.OpenBitSet.set(long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.toSetOfVertexRules(long);Class java.lang.ClassLoader.loadClass(String);Class jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.loadClass(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String);Class jdk.internal.loader.BuiltinClassLoader.defineClass(String, Resource);Class java.security.SecureClassLoader.defineClass(String, byte[], int, int, CodeSource);Class java.lang.ClassLoader.defineClass(String, byte[], int, int, ProtectionDomain);Class java.lang.ClassLoader.defineClass1(ClassLoader, String, byte[], int, int, ProtectionDomain, String);Class java.lang.ClassLoader.loadClass(String);Class jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.loadClass(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String);Resource jdk.internal.loader.URLClassPath.getResource(String, boolean);Resource jdk.internal.loader.URLClassPath$FileLoader.getResource(String, boolean);void java.io.File.<init>(File, String);String java.io.UnixFileSystem.resolve(String, String);StringBuilder java.lang.StringBuilder.append(char) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int);int java.util.Arrays.binarySearch0(int[], int, int, int) 14
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);TLongArrayList com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.parseLongs(File);boolean java.util.Scanner.hasNextLong();boolean java.util.Scanner.hasNextLong(int);boolean java.util.Scanner.hasNext(Pattern);String java.util.Scanner.getCompleteTokenInBuffer(Pattern);boolean java.util.regex.Matcher.find();boolean java.util.regex.Matcher.search(int);boolean java.util.regex.Pattern$Start.match(Matcher, int, CharSequence);boolean java.util.regex.Pattern$CharPropertyGreedy.match(Matcher, int, CharSequence);int java.lang.Character.codePointAt(CharSequence, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.set.hash.TIntHashSet.add(int);int gnu.trove.impl.hash.TIntHash.insertKey(int);int gnu.trove.impl.hash.TIntHash.insertKeyRehash(int, int, int, byte) 12
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(Set);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);HashMap$Node[] java.util.HashMap.resize() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.set.hash.TIntHashSet.add(int);void gnu.trove.impl.hash.THash.postInsertHook(boolean) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.io.BufferedReader.read() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Class java.lang.ClassLoader.loadClass(String);Class jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.loadClass(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(String, boolean);Class jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String);Class jdk.internal.loader.BuiltinClassLoader.defineClass(String, Resource);ByteBuffer jdk.internal.loader.Resource.getByteBuffer();InputStream jdk.internal.loader.Resource.cachedInputStream();InputStream jdk.internal.loader.URLClassPath$JarLoader$2.getInputStream();InputStream java.util.jar.JarFile.getInputStream(ZipEntry);void java.util.jar.JarFile.initializeVerifier();void sun.security.util.SignatureFileVerifier.<clinit>();void sun.security.util.DisabledAlgorithmConstraints.<init>(String);void sun.security.util.DisabledAlgorithmConstraints.<init>(String, AlgorithmDecomposer);String[] sun.security.util.AbstractAlgorithmConstraints.getAlgorithms(String);Object java.security.AccessController.doPrivileged(PrivilegedAction);Object sun.security.util.AbstractAlgorithmConstraints$1.run();String sun.security.util.AbstractAlgorithmConstraints$1.run();void java.security.Security.<clinit>();Object java.security.AccessController.doPrivileged(PrivilegedAction);Object java.security.Security$1.run();Void java.security.Security$1.run();void java.security.Security.access$000();void java.security.Security.initialize();void java.util.Properties.load(InputStream);void java.util.Properties.load0(Properties$LineReader);int java.util.Properties$LineReader.readLine() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);void jnisat.JPicoSat.addClause(int[]) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection) 34
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(Set) 14
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);Iterator java.util.HashSet.iterator();Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(HashMap);void java.util.HashMap$HashIterator.<init>(HashMap) 17
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.add(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object);HashMap$TreeNode java.util.HashMap$TreeNode.getTreeNode(int, Object);HashMap$TreeNode java.util.HashMap$TreeNode.find(int, Object, Class);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object) 1
