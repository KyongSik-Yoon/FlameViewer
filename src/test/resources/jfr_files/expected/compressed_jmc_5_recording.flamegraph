void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection);int gnu.trove.set.hash.TIntHashSet$TIntHashIterator.next();void gnu.trove.impl.hash.THashPrimitiveIterator.moveToNextIndex();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 76
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION) 9
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.isSolvable(long, TLongArrayList) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.<init>(Tile, Tile, Tile, Tile, Tile);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);HashMap$Node[] java.util.HashMap.resize() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection);boolean gnu.trove.impl.hash.THashPrimitiveIterator.hasNext();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 17
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(Object, Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);int java.util.HashMap.hash(Object);int com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.hashCode();Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int) 46
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.impl.hash.TIntHash.contains(int);int gnu.trove.impl.hash.TIntHash.index(int);int gnu.trove.impl.hash.TIntHash.indexRehashed(int, int, int, byte) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);Iterator java.util.HashSet.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);TIntList gnu.trove.list.array.TIntArrayList.subList(int, int);void gnu.trove.list.array.TIntArrayList.<init>(int);void gnu.trove.list.array.TIntArrayList.<init>(int, int) 7
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Object java.util.HashMap$KeyIterator.next();HashMap$Node java.util.HashMap$HashIterator.nextNode() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.io.BufferedReader.read();void java.io.BufferedReader.ensureOpen() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(Object);Iterator kotlin.ranges.IntProgression.iterator();IntIterator kotlin.ranges.IntProgression.iterator();void kotlin.ranges.IntProgressionIterator.<init>(int, int, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List) 157
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.isIncluded(POSITION);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 51
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);boolean java.util.ArrayList.add(Object);void java.util.ArrayList.ensureCapacityInternal(int);void java.util.ArrayList.ensureExplicitCapacity(int);void java.util.ArrayList.grow(int);Object[] java.util.Arrays.copyOf(Object[], int) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);void jnisat.JPicoSat.<clinit>();void jnisat.LibDetect.loadLibrary(String);File java.io.File.createTempFile(String, String);File java.io.File.createTempFile(String, String, File);void java.io.File$TempDirectory.<clinit>();void java.security.SecureRandom.<init>();void java.security.SecureRandom.getDefaultPRNG(boolean, byte[]);String java.security.SecureRandom.getPrngAlgorithm();Set java.security.Provider.getServices();void java.security.Provider.ensureLegacyParsed();void java.security.Provider.parseLegacyPut(String, String);String java.lang.String.toLowerCase(Locale) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(Set);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean) 9
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet$default(Set, int, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet(Set, int);Set kotlin.collections.CollectionsKt___CollectionsKt.toSet(Iterable) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.<init>(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object) 142
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int);int java.util.Arrays.binarySearch0(int[], int, int, int) 21
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet$default(Set, int, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet(Set, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set) 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.set.hash.TIntHashSet.add(int);void gnu.trove.impl.hash.THash.postInsertHook(boolean) 8
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.io.BufferedReader.read() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);boolean java.util.HashSet.add(Object);Object java.util.HashMap.put(Object, Object);Object java.util.HashMap.putVal(int, Object, Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(List, int);JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(List);void jnisat.JPicoSat.addClause(int[]) 21
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(Set, DirectedGraph);List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(DirectedGraph, Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(DirectedGraph$Neighbourhood, Set, List);boolean gnu.trove.list.array.TIntArrayList.addAll(TIntCollection) 42
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);Iterator kotlin.ranges.LongProgression.iterator();LongIterator kotlin.ranges.LongProgression.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(Tile, POSITION);LongRange kotlin.ranges.RangesKt___RangesKt.until(long, int);void kotlin.ranges.LongRange.<init>(long, long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(File);int java.io.BufferedReader.read();void java.io.BufferedReader.fill();int java.io.InputStreamReader.read(char[], int, int);int sun.nio.cs.StreamDecoder.read(char[], int, int);int sun.nio.cs.StreamDecoder.implRead(char[], int, int);CoderResult java.nio.charset.CharsetDecoder.decode(ByteBuffer, CharBuffer, boolean);CoderResult sun.nio.cs.UTF_8$Decoder.decodeLoop(ByteBuffer, CharBuffer);CoderResult sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(String[]);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(List, Writer, int, Object);Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(List, Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(List, File, Writer, Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(TileSet);Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(Tile);Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(Object);Object java.util.HashMap.get(Object);HashMap$Node java.util.HashMap.getNode(int, Object);HashMap$TreeNode java.util.HashMap$TreeNode.getTreeNode(int, Object) 1
