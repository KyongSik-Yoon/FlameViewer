void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.List, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.List);void jnisat.JPicoSat.<clinit>();void jnisat.LibDetect.loadLibrary(java.lang.String);java.io.File java.io.File.createTempFile(java.lang.String, java.lang.String);java.io.File java.io.File.createTempFile(java.lang.String, java.lang.String, java.io.File);void java.io.File$TempDirectory.<clinit>();void java.security.SecureRandom.<init>();void java.security.SecureRandom.getDefaultPRNG(boolean, byte[]);java.lang.String java.security.SecureRandom.getPrngAlgorithm();java.util.Set java.security.Provider.getServices();void java.security.Provider.ensureLegacyParsed();void java.security.Provider.parseLegacyPut(java.lang.String, java.lang.String);java.lang.String java.lang.String.toLowerCase(java.util.Locale) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.getTreeNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);java.util.Iterator kotlin.ranges.LongProgression.iterator();kotlin.collections.LongIterator kotlin.ranges.LongProgression.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.<init>(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.getIfAlreadyCreated(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object);java.util.Iterator kotlin.ranges.IntProgression.iterator();kotlin.collections.IntIterator kotlin.ranges.IntProgression.iterator();void kotlin.ranges.IntProgressionIterator.<init>(int, int, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION) 9
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet$default(java.util.Set, int, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet(java.util.Set, int);java.util.Set kotlin.collections.CollectionsKt___CollectionsKt.toSet(java.lang.Iterable) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 142
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.List, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.List);void jnisat.JPicoSat.addClause(int[]) 21
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.List, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.List);gnu.trove.list.TIntList gnu.trove.list.array.TIntArrayList.subList(int, int);void gnu.trove.list.array.TIntArrayList.<init>(int);void gnu.trove.list.array.TIntArrayList.<init>(int, int) 7
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int) 46
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.hashCode();java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.list.array.TIntArrayList.addAll(gnu.trove.TIntCollection) 42
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List) 157
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);kotlin.ranges.LongRange kotlin.ranges.RangesKt___RangesKt.until(long, int);void kotlin.ranges.LongRange.<init>(long, long) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.List, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.List) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.impl.hash.TIntHash.contains(int);int gnu.trove.impl.hash.TIntHash.index(int);int gnu.trove.impl.hash.TIntHash.indexRehashed(int, int, int, byte) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$Node[] java.util.HashMap.resize() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet$default(java.util.Set, int, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRuleKt.rotateRuleSet(java.util.Set, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.io.BufferedReader.read() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.list.array.TIntArrayList.addAll(gnu.trove.TIntCollection);int gnu.trove.set.hash.TIntHashSet$TIntHashIterator.next();void gnu.trove.impl.hash.THashPrimitiveIterator.moveToNextIndex();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 76
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set) 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.UtilKt.reverseRules(java.util.Set);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) 9
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);boolean java.util.ArrayList.add(java.lang.Object);void java.util.ArrayList.ensureCapacityInternal(int);void java.util.ArrayList.ensureExplicitCapacity(int);void java.util.ArrayList.grow(int);java.lang.Object[] java.util.Arrays.copyOf(java.lang.Object[], int) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.isIncluded(com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 51
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.isSolvable(long, gnu.trove.list.array.TLongArrayList) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>();void gnu.trove.impl.hash.THash.<init>(int, float);int gnu.trove.impl.hash.TIntHash.setUp(int);int gnu.trove.impl.hash.TPrimitiveHash.setUp(int);int gnu.trove.impl.hash.THash.setUp(int);int gnu.trove.impl.PrimeFinder.nextPrime(int);int java.util.Arrays.binarySearch(int[], int);int java.util.Arrays.binarySearch0(int[], int, int, int) 21
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.io.BufferedReader.read();void java.io.BufferedReader.ensureOpen() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);void gnu.trove.set.hash.TIntHashSet.<init>();void gnu.trove.impl.hash.TIntHash.<init>();void gnu.trove.impl.hash.TPrimitiveHash.<init>();void gnu.trove.impl.hash.THash.<init>() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.list.array.TIntArrayList.addAll(gnu.trove.TIntCollection);boolean gnu.trove.impl.hash.THashPrimitiveIterator.hasNext();int gnu.trove.impl.hash.THashPrimitiveIterator.nextIndex() 17
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);java.util.Iterator java.util.HashSet.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood.equals(java.lang.Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph, java.util.Set);void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood, java.util.Set, java.util.List);boolean gnu.trove.set.hash.TIntHashSet.add(int);void gnu.trove.impl.hash.THash.postInsertHook(boolean) 8
void com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt.main(java.lang.String[]);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet$default(java.util.List, java.io.Writer, int, java.lang.Object);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.tryToFindSolutionForEachRulesSet(java.util.List, java.io.Writer);void com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt.useFileToFindSolutions(java.util.List, java.io.File, java.io.Writer, java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.io.BufferedReader.read();void java.io.BufferedReader.fill();int java.io.InputStreamReader.read(char[], int, int);int sun.nio.cs.StreamDecoder.read(char[], int, int);int sun.nio.cs.StreamDecoder.implRead(char[], int, int);java.nio.charset.CoderResult java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean);java.nio.charset.CoderResult sun.nio.cs.UTF_8$Decoder.decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer);java.nio.charset.CoderResult sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 3
