<idea-plugin url="https://github.com/kornilova-l/FlameViewer">
    <id>com.github.kornilovaL.flamegraphProfiler</id>
    <name>FlameViewer</name>
    <version>0.8.2-SNAPSHOT</version>

    <vendor url="https://github.com/kornilova-l" email="kornilova203@gmail.com"/>

    <description><![CDATA[
Flamegraph Viewer<br>
<strong>Upload file to FlameViewer</strong>
<ol>
    <li>Click <strong>Tools | Open FlameViewer...</strong></li>
    <li>Upload a file of a supported profiler:
        <ul>
            <li><i>jfr</i> files generated by Flight Recorder</li>
            <li>Yourkit <i>csv</i> files. To generate csv file from a snapshot run following script: <code>java -jar -Dexport.call.tree.cpu -Dexport.csv /lib/yjp.jar -export ~/Snapshots/.snapshot</code></li>
            <li>Files in flamegraph format</li>
            <li><i>fierix</i> files generated by bundled Fierix profiler (IntelliJ IDEA only)</li>
        </ul>
    </li>
</ol>

<strong>Java performance recording. Quick start</strong><br>
Use Flight Recorder to profile your program and then open FlameViewer:
<ol>
    <li>Run JVM with following VM options: <code>-XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:StartFlightRecording=duration=30s,filename=my_recording.jfr -XX:FlightRecorderOptions=stackdepth=256</code></li>
    <li>Open FlameViewer <strong>Tools | Open FlameViewer...</strong></li>
    <li>Upload <i>my_recording.jfr</i></li>
</ol>
<strong>Fierix (only IntelliJ IDEA)</strong><br>
Fierix is a bundled instrumentation Java profiler that allows to save parameters of method calls, specify what methods will be instrumented and view a call tree.
<ol>
    <li>To specify methods that will be recorded open <strong>Tools | Fierix | Edit Configuration...</strong></li>
    <li>To run program with profiler select the desired run configuration and choose <strong>Run <name> with Fierix</strong></li>
    <li>Also you can configure profiler to save value of method's parameters or it's return value. This should be done if you want to see how parameters influence method's performance. To enable this option check 'Save' checkbox beside type of parameter(s) when editing pattern in configuration.</li>
    <li>To open results click <strong>Tools | Fierix | Open Results...</strong></li>
</ol>

Detailed description at <a href="https://github.com/kornilova-l/FlameViewer">github.com/kornilova-l/FlameViewer</a>
    ]]></description>

    <change-notes><![CDATA[
    <ul>
        <li>Implemented internal representation of flamegraph that speeds up visualization.</li>
        <li>Fixed visualization of yourkit csv files when some of nodes have zero width.</li>
        <li>Fixed visualization of whole backtraces tree, now all nodes with non-zero self time are added.</li>
        <li>Added support for retina displays.</li>
        <li>Profiler is renamed to Fierix, Flamegraph Visualizer to FlameViewer. Added FlameViewer support to IDEs.</li>
        <li>Improved visualization of method back traces tree.</li>
    </ul>
    ]]>
    </change-notes>

    <idea-version since-build="171"/>

    <!-- Enable in all IDEs -->
    <depends>com.intellij.modules.lang</depends>

    <extensionPoints>
        <extensionPoint name="toCFlamegraphConverterFactory"
                        interface="com.github.korniloval.flameviewer.converters.cflamegraph.ToCFlamegraphConverterFactory"/>
        <extensionPoint name="fileToCallTreeConverterFactory"
                        interface="com.github.korniloval.flameviewer.converters.calltree.ToCallTreeIdentifiedConverterFactory"/>
        <extensionPoint name="toCallTracesConverterFactory"
                        interface="com.github.korniloval.flameviewer.converters.calltraces.ToCallTracesIdentifiedConverterFactory"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <httpRequestHandler implementation="com.github.korniloval.flameviewer.server.IntellijRequestHandler"/>
    </extensions>

    <extensions defaultExtensionNs="com.github.kornilovaL.flamegraphProfiler">
        <toCFlamegraphConverterFactory
                implementation="com.github.korniloval.flameviewer.converters.cflamegraph.JfrToCFlamegraphConverterFactoryIntellij"/>
        <toCFlamegraphConverterFactory
                implementation="com.github.korniloval.flameviewer.converters.cflamegraph.YourkitCsvToCFlamegraphConverterFactory"/>
        <toCFlamegraphConverterFactory
                implementation="com.github.korniloval.flameviewer.converters.cflamegraph.FlamegraphToCFlamegraphConverterFactoryIntellij"/>
        <toCallTracesConverterFactory
                implementation="com.github.korniloval.flameviewer.converters.calltraces.YourkitCsvToCallTracesConverterFactory"/>
        <toCallTracesConverterFactory
                implementation="com.github.korniloval.flameviewer.converters.calltraces.FlamegraphToCallTracesConverterFactory"/>
        <toCallTracesConverterFactory
                implementation="com.github.korniloval.flameviewer.converters.calltraces.CFlamegraphToCallTracesConverterFactory"/>
        <fileToCallTreeConverterFactory
                implementation="com.github.korniloval.flameviewer.converters.calltree.FierixToCallTreeConverterFactory"/>
    </extensions>

    <actions>
        <action class="com.github.korniloval.flameviewer.OpenFlameViewerAction"
                id="FlameViewer.UploadFile" text="Open FlameViewer..." icon="ProfilerIcons.flameIcon">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </action>
        <action id="OpenFileInFlameviewerAction" class="com.github.korniloval.flameviewer.OpenFileInFlameViewerAction"
                text="Open in FlameViewer..." description="Open File in FlameViewer" icon="ProfilerIcons.flameIcon">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
    </actions>

</idea-plugin>
