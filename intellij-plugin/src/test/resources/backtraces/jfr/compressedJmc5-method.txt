tree_info {
  time_percent: 0.30495358
  nodes_count: 42
}
base_node {
  nodes {
    width: 197
    node_info {
      method_name: "getNode"
      class_name: "java.util.HashMap"
      description: "(int, Object)HashMap$Node"
    }
    nodes {
      width: 197
      node_info {
        method_name: "get"
        class_name: "java.util.HashMap"
        description: "(Object)Object"
      }
      nodes {
        width: 1
        node_info {
          method_name: "equals"
          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood"
          description: "(Object)boolean"
        }
        nodes {
          width: 1
          node_info {
            method_name: "putVal"
            class_name: "java.util.HashMap"
            description: "(int, Object, Object, boolean, boolean)Object"
          }
          nodes {
            width: 1
            node_info {
              method_name: "put"
              class_name: "java.util.HashMap"
              description: "(Object, Object)Object"
            }
            nodes {
              width: 1
              node_info {
                method_name: "add"
                class_name: "java.util.HashSet"
                description: "(Object)boolean"
              }
              nodes {
                width: 1
                node_info {
                  method_name: "<init>"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph"
                  description: "(TileSet)void"
                }
                nodes {
                  width: 1
                  node_info {
                    method_name: "useFileToFindSolutions"
                    class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                    description: "(List, File, Writer, Set, int, int, int)void"
                  }
                  nodes {
                    width: 1
                    node_info {
                      method_name: "tryToFindSolutionForEachRulesSet"
                      class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                      description: "(List, Writer)Set"
                    }
                    nodes {
                      width: 1
                      node_info {
                        method_name: "tryToFindSolutionForEachRulesSet$default"
                        class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                        description: "(List, Writer, int, Object)Set"
                      }
                      nodes {
                        width: 1
                        node_info {
                          method_name: "main"
                          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt"
                          description: "(String[])void"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      nodes {
        offset: 1
        width: 1
        index: 1
        node_info {
          method_name: "hashCode"
          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph$Neighbourhood"
          description: "()int"
        }
        nodes {
          offset: 1
          width: 1
          node_info {
            method_name: "hash"
            class_name: "java.util.HashMap"
            description: "(Object)int"
          }
          nodes {
            offset: 1
            width: 1
            node_info {
              method_name: "put"
              class_name: "java.util.HashMap"
              description: "(Object, Object)Object"
            }
            nodes {
              offset: 1
              width: 1
              node_info {
                method_name: "add"
                class_name: "java.util.HashSet"
                description: "(Object)boolean"
              }
              nodes {
                offset: 1
                width: 1
                node_info {
                  method_name: "<init>"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph"
                  description: "(TileSet)void"
                }
                nodes {
                  offset: 1
                  width: 1
                  node_info {
                    method_name: "useFileToFindSolutions"
                    class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                    description: "(List, File, Writer, Set, int, int, int)void"
                  }
                  nodes {
                    offset: 1
                    width: 1
                    node_info {
                      method_name: "tryToFindSolutionForEachRulesSet"
                      class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                      description: "(List, Writer)Set"
                    }
                    nodes {
                      offset: 1
                      width: 1
                      node_info {
                        method_name: "tryToFindSolutionForEachRulesSet$default"
                        class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                        description: "(List, Writer, int, Object)Set"
                      }
                      nodes {
                        offset: 1
                        width: 1
                        node_info {
                          method_name: "main"
                          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt"
                          description: "(String[])void"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      nodes {
        offset: 2
        width: 142
        index: 2
        node_info {
          method_name: "formClause"
          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
          description: "(DirectedGraph$Neighbourhood, Set, List)void"
        }
        nodes {
          offset: 2
          width: 142
          node_info {
            method_name: "toDimacs"
            class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
            description: "(DirectedGraph, Set)List"
          }
          nodes {
            offset: 2
            width: 142
            node_info {
              method_name: "tryToFindSolution"
              class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
              description: "(Set, DirectedGraph)LabelingFunction"
            }
            nodes {
              offset: 2
              width: 142
              node_info {
                method_name: "useFileToFindSolutions"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                description: "(List, File, Writer, Set, int, int, int)void"
              }
              nodes {
                offset: 2
                width: 142
                node_info {
                  method_name: "tryToFindSolutionForEachRulesSet"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                  description: "(List, Writer)Set"
                }
                nodes {
                  offset: 2
                  width: 142
                  node_info {
                    method_name: "tryToFindSolutionForEachRulesSet$default"
                    class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                    description: "(List, Writer, int, Object)Set"
                  }
                  nodes {
                    offset: 2
                    width: 142
                    node_info {
                      method_name: "main"
                      class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt"
                      description: "(String[])void"
                    }
                  }
                }
              }
            }
          }
        }
      }
      nodes {
        offset: 144
        width: 53
        index: 3
        node_info {
          method_name: "get"
          class_name: "org.apache.commons.collections4.bidimap.AbstractDualBidiMap"
          description: "(Object)Object"
        }
        nodes {
          offset: 144
          width: 2
          node_info {
            method_name: "getIfAlreadyCreated"
            class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph"
            description: "(Tile)Tile"
          }
          nodes {
            offset: 144
            width: 2
            node_info {
              method_name: "<init>"
              class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedGraph"
              description: "(TileSet)void"
            }
            nodes {
              offset: 144
              width: 2
              node_info {
                method_name: "useFileToFindSolutions"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                description: "(List, File, Writer, Set, int, int, int)void"
              }
              nodes {
                offset: 144
                width: 2
                node_info {
                  method_name: "tryToFindSolutionForEachRulesSet"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                  description: "(List, Writer)Set"
                }
                nodes {
                  offset: 144
                  width: 2
                  node_info {
                    method_name: "tryToFindSolutionForEachRulesSet$default"
                    class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                    description: "(List, Writer, int, Object)Set"
                  }
                  nodes {
                    offset: 144
                    width: 2
                    node_info {
                      method_name: "main"
                      class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt"
                      description: "(String[])void"
                    }
                  }
                }
              }
            }
          }
        }
        nodes {
          offset: 146
          width: 51
          index: 1
          node_info {
            method_name: "isIncluded"
            class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule"
            description: "(POSITION)boolean"
          }
          nodes {
            offset: 146
            width: 51
            node_info {
              method_name: "formClause"
              class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
              description: "(DirectedGraph$Neighbourhood, Set, List)void"
            }
            nodes {
              offset: 146
              width: 51
              node_info {
                method_name: "toDimacs"
                class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
                description: "(DirectedGraph, Set)List"
              }
              nodes {
                offset: 146
                width: 51
                node_info {
                  method_name: "tryToFindSolution"
                  class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt"
                  description: "(Set, DirectedGraph)LabelingFunction"
                }
                nodes {
                  offset: 146
                  width: 51
                  node_info {
                    method_name: "useFileToFindSolutions"
                    class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                    description: "(List, File, Writer, Set, int, int, int)void"
                  }
                  nodes {
                    offset: 146
                    width: 51
                    node_info {
                      method_name: "tryToFindSolutionForEachRulesSet"
                      class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                      description: "(List, Writer)Set"
                    }
                    nodes {
                      offset: 146
                      width: 51
                      node_info {
                        method_name: "tryToFindSolutionForEachRulesSet$default"
                        class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.TwoOrThreeNeighboursKt"
                        description: "(List, Writer, int, Object)Set"
                      }
                      nodes {
                        offset: 146
                        width: 51
                        node_info {
                          method_name: "main"
                          class_name: "com.github.kornilova_l.algorithm_synthesis.grid2D.CheckAllKt"
                          description: "(String[])void"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
depth: 11
width: 197
