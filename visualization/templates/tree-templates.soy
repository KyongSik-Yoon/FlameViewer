{namespace templates.tree}

/**
 * Get section template for tree of particular thread
 * @param id Thread id
 * @param canvasHeight Height of canvas
 * @param canvasWidth
 * @param canvasOffset
 * @param threadName
 * @param nodesCount
 */
{template .getCallTreeSection}
<section>
    <h2 class="call-tree-header">{$threadName} <span>{$nodesCount} {if $nodesCount > 1}calls{else}call{/if}</span></h2>
    <canvas
        id="canvas-{$id}"
        width="{$canvasWidth}"
        height="{$canvasHeight}"
        style="margin-left:{$canvasOffset}px">
    </canvas>
    <canvas id="canvas-zoomed-{$id}"
                width="{$canvasWidth}"
                height="{$canvasHeight}"
                style="display: none;">
    </canvas>
</section>
{/template}

/**
 * Get section template for base tree
 * @param canvasHeight Height of canvas
 * @param canvasWidth
 * @param header
 */
{template .getAccumulativeTreeSection}
<section>
    {if $header}
    <h2 class="accumulative-tree-header">{$header}</h2>
    {/if}
    <canvas id="canvas"
        width="{$canvasWidth}"
        height="{$canvasHeight}">
    </canvas>
    <canvas id="canvas-zoomed"
            width="{$canvasWidth}"
            height="{$canvasHeight}"
            style="display: none;">
    </canvas>
</section>
{/template}

/**
 * Generate popup for method in call tree
 * @param duration
 * @param startTime
 * @param methodName
 * @param className
 */
{template .callTreePopup}
<div class="popup">
    <h3>{$className}.<b>{$methodName}</b></h3>
    <p>Start time: {$startTime}ms</p>
    <p>Duration: {$duration}ms</p>
</div>
{/template}

/**
 * Generate popup for method in base tree
 */
{template .accumulativeTreePopup}
<div class="popup">
    <ul>
        <li><a class="outgoing-link">Outgoing Calls</a></li>
        <li><a class="incoming-link">Incoming Calls</a></li>
    </ul>
    <h3></h3>
    <p class="p-calls-num"></p>
</div>
{/template}

/**
 * Generate list of files
 * @param fileNames list of files
 * @param projectName
 * @param pageName
 */
{template .listOfFiles}
<ol class="file-list">
  {foreach $fileName in $fileNames}
    <li id="{$fileName}">
        <img class="delete-file-black delete-file" src="img/close-black.png"/>
        <img class="delete-file-white delete-file" src="img/close-white.png"/>
        <a href="/flamegraph-profiler/{$pageName}?file={$fileName}&amp;project={$projectName}">{$fileName}</a>
    </li>
  {/foreach}
  </ol>
{/template}

/**
 * Form for uploading files
 */
{template .fileInput}
<form class="file-form">
    <input type="file" name="file" id="file" class="inputfile" multiple/>
    <label for="file"><span>Upload file</span></label>
    <p class="file-form-header">.jfr or .ser</p>
</form>
{/template}

/**
 * @param methodName
 * @param className
 * @param retVal
 * @param parameters
 * @param doBreak
 * @param relativeTime
 * @param fileName
 * @param projectName
 * @param desc
 */
{template .hotSpot}
<div class="hot-spot">
    <div class="outer-time-div">
        <p class="relative-time">{$relativeTime}%</p>
        <div class="total-time"><div class="method-time"></div></div>
    </div>
    <p class="method">
    <code class="return-value">{$retVal}</code>
    <code> </code>
    <code class="class-name">{$className}</code>
    <wbr>
    .
    <code class="method-name">{$methodName}</code>
    <wbr>
    (
    {foreach $parameter in $parameters}
        {if $parameter}
            {if $doBreak}<br/>{/if}
            {if $doBreak}<code>&#160&#160&#160&#160&#160&#160&#160&#160&#160&#160&#160&#160&#160&#160</code>{/if}
            <code class="parameter">{$parameter}</code>
            {if not isLast($parameter)}
                <code>, </code>
            {/if}
        {/if}
    {/foreach}
    )
    </p>
    <a href="/flamegraph-profiler/outgoing-calls?file={$fileName}&amp;project={$projectName}&amp;method={$methodName}&amp;class={$className}&amp;desc={$desc}">Outgoing calls</a>
    <a href="/flamegraph-profiler/incoming-calls?file={$fileName}&amp;project={$projectName}&amp;method={$methodName}&amp;class={$className}&amp;desc={$desc}">Incoming calls</a>

</div>
{/template}

/**
 *
 * @param fileName
 */
{template .confirmDelete}
<div>
    <div class="confirm-delete-bg"></div>
    <div class="confirm-delete-popup">
        <h3>Delete file {$fileName}?</h3>
        <div class="do-delete"><a>Ok</a></div>
        <div class="do-not-delete"><p>Cancel</p></div>
    </div>
</div>
{/template}